#include <bits/stdc++.h> 
/**********************************************************************

    Following is the class structure of the Node class for reference:

    class Node{
    public:
        int data;
        Node *next;
        Node(int data)
        {
	        this->data = data;
	        this->next = NULL;
        }
    };

********************************************************************/
// first we will write the code for the merging two lists

Node* merge(Node * l1 , Node * l2){
    if(l1 == NULL) return l2;

    if(l2 == NULL) return l1;

    if(l1->data < l2->data){
        l1->next = merge(l1->next , l2);
        return l1;

    }else{
        l2->next = merge(l1, l2->next);
        return l2;
    }
}

Node* findmid(Node * head){
    Node* slow = head;
    Node * fast = head->next;

    while(fast != NULL && fast->next != NULL){
        slow = slow->next;
        fast = fast->next->next;
    }

   return slow;// slow will be at middle element

}
Node *sortLL(Node *head){
    // Write your code here.

    if(head == NULL || head->next == NULL){
        return head;
    }
    // Now we find the left element
    Node* mid = findmid(head);
    Node * left = head;
    Node * right = mid->next;
    mid->next = NULL;

    // now we sort from left to right recurssively

    left = sortLL(left);
    right = sortLL(right);


    // now we merge the lists and make the final lists recurssively

    return merge(left,right);
}
