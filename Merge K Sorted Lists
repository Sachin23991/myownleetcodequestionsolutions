/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* merge(ListNode* first, ListNode* second){

        if(!first) return second;

        if(!second) return first;


        if(first->val < second->val){
            first->next = merge(first->next, second);
            return first;
        }else{
            second->next = merge(first,second->next);
            return second;
        }
    }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        
        int n = lists.size();
         ListNode * result = NULL;
        for(int i  = 0 ; i < n ; i++){

        result = merge(result,lists[i]);
        }

        return result;
    }
};
