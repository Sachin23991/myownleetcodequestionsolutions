int minJumps(vector<int> &nums,int n) {
    if (n == 1) return 0; // already at last index
    
    int jumps = 0;          // number of jumps taken
    int currentEnd = 0;     // boundary of the current jump
    int farthest = 0;       // farthest we can go so far
    
    for (int i = 0; i < n - 1; i++) {  // no need to jump from the last index
        farthest = max(farthest, i + nums[i]);
        
        if (i == currentEnd) {   // we reached the end of the current jump
            jumps++;
            currentEnd = farthest;
            
            if (currentEnd >= n - 1) {
                return jumps;   // already can reach the end
            }
        }
    }
    return -1; // if unreachable
}
